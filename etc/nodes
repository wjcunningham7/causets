#!/usr/bin/env python

###########################
#(C) Will Cunningham 2017 #
#         DK Lab          #
# Northeastern University #
###########################

# Computes the distribution and expectation value of the number of nodes

import glob
import math
import numpy as np
import sys

basedir = './'
files = glob.glob(basedir + 'dat/*.cset.out')

N = len(files)
n = []
avg = 0

for i in range(0, N):
	n.append(0)

idx = 0
for file in files:
	f = open(file)
	lines = f.readlines()

	for line in lines:
		tokens = line.split()
		if len(tokens) == 0:
			continue

		if tokens[0] == 'Number' and tokens[1] == 'of' and tokens[2] == 'Nodes':
			n[idx] = int(tokens[4])

	avg += float(n[idx])
	idx += 1

	f.close()

stderr = 0
if N > 0:
	avg /= float(N)
	stderr = np.std(n) / math.sqrt(float(N))
sys.stdout.write('Average Nodes: ' + str(avg) + ' +/- ' + str(stderr) + '\n')

f = open(basedir + 'dat/ref/average_n.cset.nod.ref','w')
for i in range(0, N):
	f.write(str(n[i]) + '\n')
f.close()

sys.stdout.write('Completed NOD.\n')
