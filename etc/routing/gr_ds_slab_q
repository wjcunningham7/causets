#!/usr/bin/env python

import math
import numpy as np
import sys

###########################
#(C) Will Cunningham 2015 #
#         DK Lab          #
# Northeastern University #
###########################

# Used to calculate greedy routing parameters for the de Sitter slab (constant q)

q = float(sys.argv[1])
omega = float(sys.argv[2])
r = 5

tau0 = (2.0 / 3.0) * np.arctanh(math.pow(omega, 0.5))
eta1 = -1.0
eta2 = -math.exp(-tau0)

#K = 1
#N = int((2.0 * math.pi * math.pi / 3.0) * q * (2.0 + math.cosh(tau0) * math.cosh(tau0)) * math.sinh(tau0))

#K = 0
eta13 = math.pow(eta1, 3.0)
eta23 = math.pow(eta2, 3.0)
n0 = (4.0 * math.pi / 9.0) * q * math.pow(r, 3.0) * ((eta23 - eta13) / (eta13 * eta23))
n1 = 256 * int(math.floor(n0 / 256))
r1 = eta1 * eta2 * math.pow(9.0 * n1 / (4.0 * math.pi * q * (eta23 - eta13)), 1.0 / 3.0)

sys.stdout.write('N:     %d\n' % n1)
sys.stdout.write('alpha: %f\n' % r1)
