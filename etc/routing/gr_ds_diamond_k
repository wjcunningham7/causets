#!/usr/bin/env python

###########################
#(C) Will Cunningham 2016 #
#         DK Lab          #
# Northeastern University #
###########################

# Used to calculate greedy routing parameters for the de Sitter diamond (constant k)

import math
import numpy as np
import sys

#k = 10
#tau0 = 0.3
k = float(sys.argv[1])
tau0 = float(sys.argv[2])
kappa = 0

eta0 = -1
eta1 = -math.exp(-tau0)

xi = eta0 / math.sqrt(2.0)
w = (eta1 - eta0) / math.sqrt(2.0)
mu = math.log(math.pow(w + 2.0 * xi, 2.0) / (4.0 * xi * (w + xi))) - math.pow(w / (w + 2.0 * xi), 2.0)

f = open('etc/tables/average_degree_11300_0_table.cset.bin', 'rb')
data = np.fromfile(f, 'd')
for x,y in zip(data[1::2], data[0::2]):
	if x >= tau0:
		kappa = y
		break 

if y == data[0]:
	sys.stdout.write('Table is insufficient! First element was used.\n')
	sys.exit(1)
if kappa == 0:
	sys.stdout.write('Table is insufficient! No element could be used.\n')
	sys.exit(2)

q = k / kappa
n = int(4.0 * math.pi * q * mu / 3.0)

sys.stdout.write('n: %d\n' % n)
