#!/bin/bash

###########################
#(C) Will Cunningham 2016 #
#         DK Lab          #
# Northeastern University #
###########################

# Creates a parameter file which lsf/tests/slab_navigation can read (for many runs)

set -eu -o pipefail

if [[ "$#" -lt 2 ]] ; then
  echo "Arguments are [spacetime] [degree]."
  exit 1
fi

st=$1
k=$2

tau=(0.01 0.0278 0.0774 0.2154 0.5995 1.6681 4.6416)

if [[ $st == 41508 ]] ; then
  if [[ $k == 10 ]] ; then
    n=(343552 442624 420352 424192 438016 432896 731136)
    a=(0.149984 0.449966 1.19994 3.0998 6.7496 7.2497 0.9999)
  elif [[ $k == 15 ]] ; then
    n=(515328 664064 630528 636416 656896 649216 1096704)
    a=(0.149984 0.44994 1.19994 3.0999 6.7491 7.2492 0.9999)
  elif [[ $k == 20 ]] ; then
    n=(687104 885248 840704 848384 876032 865792 1462272)
    a=(0.149984 0.449966 1.19994 3.0998 6.7496 7.2497 0.9999)
  else
    echo "Invalid parameter for degree: $k"
    exit 2
  fi
elif [[ $st == 41540 ]] ; then
  if [[ $k == 10 ]] ; then
    n=(171008 168704 176640 174336 168960 170496 171264)
    a=(1.9991 2.7991 3.9988 5.5982 7.7964 10.9964 15.4954)
  elif [[ $k == 15 ]] ; then
    n=(256768 253184 264960 261632 253696 255744 257024)
    a=(1.9998 2.7996 3.9988 5.5991 7.7990 10.9964 15.4980)
  elif [[ $k == 20 ]] ; then
    n=(342272 337664 353536 348928 338176 341248 342784)
    a=(1.9996 2.7998 3.9998 5.5995 7.7984 10.9991 15.4993)
  else
    echo "Invalid parameter for degree: $k"
    exit 3
  fi
elif [[ $st == 41604 ]] ; then
  if [[ $k == 10 ]] ; then
    n=(124416 81664 74752 55552 145664 173568 738304)
    a=(1.7998 2.1982 2.9979 3.7969 6.9966 6.9980 1.4999)
  elif [[ $k == 15 ]] ; then
    n=(220160 159488 135680 148480 238336 308480 723200)
    a=(1.8999 2.3989 3.1987 4.5999 7.1988 7.3999 1.2999)
  elif [[ $k == 20 ]] ; then
    n=(342528 212992 181504 129792 292352 378624 759552)
    a=(1.9998 2.3995 3.1998 3.9979 6.9984 7.1988 1.1999)
  else
    echo "Invalid parameter for degree: $k"
    exit 4
  fi
else
  echo "Invalid parameter for spacetime: $st"
  exit 1
fi

for (( i=0 ; i<${#tau[@]} ; i++ )) ; do
  echo "${tau[$i]} ${n[$i]} ${a[$i]}" >> causet.par
done
