#!/usr/bin/python

###########################
#(C) Will Cunningham 2014 #
# Krioukov Research Group #
# Northeastern University #
###########################

# Computes the distribution and average of the following:
#  -Isolated Nodes
#  -Number of Connected Components
#  -Size of the Giant Component

import glob
import sys

#basedir = '/scratch/cunningham/causets/'
basedir = ''
files = glob.glob(basedir + 'dat/*.cset.out')

N = len(files)

N_iso = []
N_cc = []
N_gcc = []

avg_iso = 0
avg_cc = 0
avg_gcc = 0

for i in range(0,N):
	N_iso.append(0)
	N_cc.append(0)
	N_gcc.append(0)

N_tar = 1
idx = 0
for file in files:
	f = open(file)
	lines = f.readlines()

	for line in lines:
		tokens = line.split()
		if len(tokens) == 0:
			continue

		if tokens[0] == 'Number' and tokens[1] == 'of' and tokens[2] == 'Nodes':
			N_tar = int(tokens[4])

		if tokens[0] == 'Resulting' and tokens[1] == 'Nodes':
			N_iso[idx] = N_tar - int(tokens[3])

		if tokens[0] == 'Number' and tokens[1] == 'of' and tokens[2] == 'Connected' and tokens[3] == 'Components':
			N_cc[idx] = int(tokens[4])

		if tokens[0] == 'Size' and tokens[1] == 'of' and tokens[2] == 'Giant' and tokens[3] == 'Connected' and tokens[4] == 'Component':
			N_gcc[idx] = int(tokens[5])

	avg_iso += N_iso[idx]
	avg_cc += N_cc[idx]
	avg_gcc += N_gcc[idx]
	idx += 1

	f.close()

avg_iso /= N
avg_cc /= N
avg_gcc /= N

sys.stdout.write('Number of Isolated Nodes: %d\n' % avg_iso)
sys.stdout.write('Number of Connected Components: %d\n' % avg_cc)
sys.stdout.write('Size of Giant Component: %d\n' % avg_gcc)
sys.stdout.write('Relative Size of Giant Component: %f\n' % (float(avg_gcc) / float(N_tar)))

f = open(basedir + 'dat/ref/average_N_iso.cset.cmp.ref','w')
for i in range(0,N):
	f.write(str(N_iso[i]) + '\n')
f.close()

f = open(basedir + 'dat/ref/average_N_cc.cset.cmp.ref','w')
for i in range(0,N):
	f.write(str(N_cc[i]) + '\n')
f.close()

f = open(basedir + 'dat/ref/average_N_gcc.cset.cmp.ref','w')
for i in range(0,N):
	f.write(str(N_gcc[i]) + '\n')
f.close()

sys.stdout.write('Completed CMP.\n')
