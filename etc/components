#!/usr/bin/python

###########################
#(C) Will Cunningham 2014 #
# Krioukov Research Group #
# Northeastern University #
###########################

# Computes the distribution and average of the following:
#  -Isolated Nodes
#  -Number of Connected Components
#  -Size of the Giant Component

import glob
import sys

if (len(sys.argv) == 1):
	sys.stdout.write('Must specify topology.\n')
	sys.exit(0)
elif (len(sys.argv) > 2):
	sys.stdout.write('Too many parameters specified.\n')
	sys.exit(0)

ctype = 0
if (sys.argv[1] == '1+1'):
	ctype = 1
elif (sys.argv[1] == '3+1'):
	ctype = 2
elif (sys.argv[1] == 'uni'):
	ctype = 3

if (ctype == 0):
	sys.stdout.write('Invalid parameter.\n')
	sys.exit(0)

tar_line = 0
res_line = 0
cc_line = 0
gcc_line = 0

if (ctype == 1):
	tar_line = 6
	res_line = 12
	cc_line = 19
	gcc_line = 20
elif (ctype == 2):
	tar_line = 6
	res_line = 12
	cc_line = 19
	gcc_line = 20
elif (ctype == 3):
	tar_line = 6
	res_line = 22
	cc_line = 26
	gcc_line = 27

basedir = '/scratch/cunningham/causets/'
files = glob.glob(basedir + 'dat/*.cset.out')

N = len(files)

N_iso = []
N_cc = []
N_gcc = []

avg_iso = 0
avg_cc = 0
avg_gcc = 0

for i in range(0,N):
	N_iso.append(0)
	N_cc.append(0)
	N_gcc.append(0)

N_tar = 1
idx = 0
for file in files:
	f = open(file)
	lines = f.readlines()

	N_tar = int(lines[tar_line].split()[3])

	N_iso[idx] = int(lines[tar_line].split()[3]) - int(lines[res_line].split()[3])
	N_cc[idx] = int(lines[cc_line].split()[4])
	N_gcc[idx] = int(lines[gcc_line].split()[5])

	avg_iso += N_iso[idx]
	avg_cc += N_cc[idx]
	avg_gcc += N_gcc[idx]
	idx += 1

	f.close()

avg_iso /= N
avg_cc /= N
avg_gcc /= N

sys.stdout.write('Number of Isolated Nodes: %d\n' % avg_iso)
sys.stdout.write('Number of Connected Components: %d\n' % avg_cc)
sys.stdout.write('Size of Giant Component: %d\n' % avg_gcc)
sys.stdout.write('Relative Size of Giant Component: %f\n' % (float(avg_gcc) / float(N_tar)))

f = open(basedir + 'dat/ref/average_N_iso.cset.cmp.ref','w')
for i in range(0,N):
	f.write(str(N_iso[i]) + '\n')
f.close()

f = open(basedir + 'dat/ref/average_N_cc.cset.cmp.ref','w')
for i in range(0,N):
	f.write(str(N_cc[i]) + '\n')
f.close()

f = open(basedir + 'dat/ref/average_N_gcc.cset.cmp.ref','w')
for i in range(0,N):
	f.write(str(N_gcc[i]) + '\n')
f.close()

sys.stdout.write('Completed CMP.\n')
