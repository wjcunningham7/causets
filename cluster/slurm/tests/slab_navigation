#!/bin/bash

###########################
#(C) Will Cunningham 2016 #
#         DK Lab          #
# Northeastern University #
###########################

# Slab routing experiments

set -eu -o pipefail

# GENERAL USE #
# Use 'setnextjob' command
# Set spacetime
# Set density/degree (do not define both)
# Modify 'readstart' and 'samples'
# Choose 'queue'
# Set 'makeparfile' accordingly

spacetime=41604
density=60
#degree=10

if [[ "$spacetime" -eq 41508 ]] ; then
  spacecut="radius"
else
  spacecut="alpha"
fi

if [[ -z ${degree+x} ]] ; then
  echo "Beginning constant density routing experiment."
  timecut=energy
else
  echo "Beginning constant degree routing experiment."
  timecut=age
fi

source /home/$USER/.queues
jobstart=$NEXT_JOB
readstart=1403
samples=1
partition="par-gpu"
ncores=$(sinfo -p $partition -o "%c" | awk 'NR==2 {print $1}')
exclude="compute-4-017"

if [ "$partition" = "par-gpu" ] || [ "$partition" = "par-gpu-2" ] || [ "$partition" = "krioukov_gpu" ] ; then
  gpu="--gpu"
else
  gpu=""
fi

makeparfile=false
if [[ $makeparfile == "true" ]] ; then
  rm -f $CAUSET_HOME/causet.par
  if [[ "$timecut" == "energy" ]] ; then
    $CAUSET_HOME/etc/routing/gr_test_slab_density $spacetime $density
  else
    $CAUSET_HOME/etc/routing/gr_test_slab_degree $spacetime $degree 0.01 4.6416 7
  fi
  exit 1
fi
#parfile=$CAUSET_HOME/causet.par
parfile=$1
readarray -t vars < $parfile

for i in $(seq ${#vars[@]}) ; do
  job=$(($i+$jobstart-1))
  var=(${vars[${i}-1]})
  if [[ ${var:0:1} == "#" ]] ; then
    continue
  fi

  if [[ $spacetime -eq 41508 ]] ; then
    spacetime=4800114
  elif [[ $spacetime -eq 41540 ]] ; then
    spacetime=4800124
  elif [[ $spacetime -eq 41604 ]] ; then
    spacetime=4800144
  fi

  age=${var[0]}
  nodes=${var[1]}
  cutoff=${var[2]}

  if [[ "$readstart" -ne 0 ]] ; then
    readjob=$(($i+$readstart-1))
    nodes=0
    samples=1

    echo "Attempting to read job $readjob."
    basedir=/gss_gpfs_scratch/cunningham
    if [[ ! -d $basedir/causet${readjob} ]] ; then
      echo "Job ${readjob} could not be found."
      continue
    fi

    #link=relink
    #link=link
    if [[ $(ls $basedir/causet${readjob}/dat/edg | wc -l) -eq 0 ]] ; then
      link=relink
      #echo "Must relink job ${readjob}!"
      #echo "${var[0]} ${var[1]} ${var[2]}" >> $CAUSET_HOME/causet.par
      #continue
    else
      link=link
    fi

    numfound=$(ls $basedir/causet${readjob}/dat/pos/*.pos.dat | wc -l)
    #if [[ $numfound -lt 3 ]] ; then
    #  echo "Not enough data found for job ${readjob} - $numfound sample(s) found."
    #  continue
    #fi
  else
    readjob=0
    link=link
  fi

  $CAUSET_HOME/cluster/slurm/wrapper/causet_wrp --start $job --readjob $readjob --ncores $ncores --flags '--spacetime '"$spacetime"' --nodes '"$nodes"' --'"$timecut"' '"$age"' --'"$spacecut"' '"$cutoff"' --'"$link"' '"$gpu"' --verbose -y --quiet-read --print --geo-discon 10000000' --partition $partition --nsamples $samples --exclude $exclude
  #$CAUSET_HOME/slurm/wrapper/causet_wrp --start $job --readjob $readjob --ncores $ncores --flags '--spacetime '"$spacetime"' --nodes '"$nodes"' --'"$timecut"' '"$age"' --'"$spacecut"' '"$cutoff"' --'"$link"' '"$gpu"' --verbose -y --core 1 --print' --partition $partition --nsamples $samples --exclude $exclude
done

setnextjob $(($job+1))
