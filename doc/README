===========================
|(C) Will Cunningham 2017 |
|         DK Lab          |
| Northeastern University |
===========================

=========
|Summary|
=========

This repository contains the CausalSet software package. This software is intended to be used to generate and study causal sets from both the quantum gravity and random geometric graph perspectives. Source code is in the src and inc directories, with the main method located at the top of src/Causet.cu.  All data structures are defined in inc/Causet.h and inc/Spacetime.h. Causal set initialization and construction methods are in src/NetworkCreator.cu and src/NetworkCreator_GPU.cu. Lower-level algorithms and mathematical functions are respectively found in src/Subroutines.cu and inc/Operations.h. Certain specific mathematical functions have earned a place in their own files, such as inc/Coordinates.h for element coordinate sampling and inc/Geodesics.h for (continuum) geodesic distance calculations. The file src/Validate.cu contains alternate implementations of certain functions along with useful printing methods for debugging. The etc directory contains some python scripts which are useful for analyzing the output files generated by the CausalSet binary.

======================
|Supported Spacetimes|
======================
A spacetime is defined here as a unique combination of
1. Spacetime Dimension (2, 3, 4)
2. Manifold (Minkowski, De Sitter, etc.)
3. Bounding Region (Slab, Diamond, etc.)
4. Spatial Curvature (Flat, Positive, Negative)
5. Symmetries (Temporal, None)

A complete list of spacetimes may be viewed at the end of the file VERSION. This file may be updated at any time using the bash script etc/spacetimes.
To add a new spacetime, simply add a new value to the arrays in the inc/Spacetime.h file. You may then add to the initVars and generateNodes functions in src/NetworkCreator.cu to provide information on parameters, and add coordinate sampling formulae in inc/Coordinates.h

======================
|Measuring Properties|
======================
The C code currently allows you to measure
1. Graph clustering
2. The number and size of connected components in the graph
3. The success ratio and/or stretch using the greedy routing algorithm
4. The smeared or local Benincasa-Dowker action
5. The length of the longest maximal chain
6. The hub density in the graph
7. The fraction of element pairs geodesically disconnected in the embedding space

In addition, python scripts in the etc directory allow you to measure certain properties provided output from more than one causal set:
1. The action, provided a list of interval abundances
2. The mean clustering and clustering distribution
3. The distribution of connected components, and mean size of the giant connected component
4. The mean degree and degree distribution
5. The mean number of geodesically disconnected pairs
6. The mean time of the earliest element, often used to study sampling accuracy
7. The mean number of elements
8. The mean stretch and success ratio

=======================
|Compilation and Usage|
=======================

Preparation:
------------
1) FastMath:  This package requires the FastMath library has been installed. This may be found on the DK-Lab Bitbucket page. Follow installation instructions there. Modify the .causet file to reflect the proper installation directory.
2) GPU Support:  If there is an NVIDIA GPU on the computer you will use this on, ensure both the CUDA Toolkit (at least v8.0) and latest driver have been installed. This code has been compiled and tested for a GPU with compute capability of at least 3.5.  See the CUDA Wikipedia page for a list of which GPUs have which compute capability.  If you enter 'nvidia-smi --version' into the terminal, you should see no errors if everything is working properly. Make sure to modify the .causet file so the CUDA_ARCH reflects the proper value for compute capability - for instance, a GPU with compute capability 3.7 would have CUDA_ARCH=sm_37.
3) Platform MPI:  If you are using multiple computers to run the code, make sure you are using Platform MPI as the messaging protocol.
4) The PLATFORM environment variable is used to assign a name to your binary, usually the computer's hostname. This enables you to compile different binaries for different computers without confusion.

To install:
-----------
cp .causet /home/$USER
sh ./bootstrap.sh
./configure (--enable-cuda --enable-mpi are optional)
make
make install

To clean:
---------
make distclean

This will remove all files created during installation, with the exception of
the files in the installation directory.

To run:
-------
To see the complete list of available flags:
./bin/CausalSet_$PLATFORM --help

To create and study a small causal set:
./bin/CausalSet_$PLATFORM --stdim 2 --manifold De_Sitter --region Slab --curvature Positive --symmetry None --nodes 2048 --age 0.5 --action smeared --print --print-edges

==============
|Maintainence|
==============
Contact <w.cunningham@northeastern.edu> to report bugs or get help.
