#!/bin/bash

###########################
#(C) Will Cunningham 2017 #
#         DK Lab          #
# Northeastern University #
###########################

# Test how number of pairs affects navigation properties

set -eu -o pipefail

# GENERAL USE
# Use 'setnextjob' command
# Set spacetime
# Set density/degree
# Choose queue
# Create parfile

spacetime=41540
#density=60
degree=10

if [[ "$spacetime" -eq 41508 ]] ; then
  spacecut="radius"
else
  spacecut="alpha"
fi

if [[ -z ${degree+x} ]] ; then
  echo "Beginning constant density routing experiment."
  timecut=energy
else
  echo "Beginning constant degree routing experiment."
  timecut=age
fi

source /home/$USER/.queues
jobstart=$NEXT_JOB
readstart=0
samples=10
partition="krioukov_gpu"
ncores=$(sinfo -p $partition -o "%c" | awk 'NR==2 {print $1}')
exclude="compute-4-017"

if [ "$partition" = "par-gpu" ] || [ "$partition" = "par-gpu-2" ] || [ "$partition" = "par-gpu-3" ] || [ "$partition" = "krioukov_gpu" ] ; then
  gpu="--gpu"
else
  gpu=""
fi

if [[ $spacetime -eq 41508 ]] ; then
  spacetime=4800114
elif [[ $spacetime -eq 41540 ]] ; then
  spacetime=4800124
elif [[ $spacetime -eq 41604 ]] ; then
  spacetime=4800144
fi

age=4.6416
nodes=1048576
cutoff=28.3374

parfile=$1
readarray -t vars < $parfile

for i in $(seq ${#vars[@]}) ; do
  job=$(($i+$jobstart-1))
  var=(${vars[${i}-1]})
  if [[ ${var:0:1} == "#" ]] ; then
    continue
  fi

  npaths=${var[0]}
  readjob=$readstart
  link=link

  if [[ "$readstart" -ne 0 ]] ; then
    echo "Attempting to read job $readjob."
    nodes=0
    samples=1
    basedir=/gss_gpfs_scratch/cunningham

    if [[ ! -d $basedir/causet${readjob} ]] ; then
      echo "Job ${readjob} could not be found."
      continue
    fi

    if [[ $(ls ${basedir}/causet${readjob}/dat/edg | wc -l) -eq 0 ]] ; then
      link=relink
    fi
  fi
  
  $CAUSET_HOME_DIR/slurm/wrapper/causet_wrp --start $job --readjob $readjob --ncores $ncores --flags '--spacetime '"$spacetime"' --nodes '"$nodes"' --'"$timecut"' '"$age"' --'"$spacecut"' '"$cutoff"' --link '"$gpu"' --verbose -y --quiet-read --print --success '"$npaths"' --stretch' --partition $partition --nsamples $samples --exclude $exclude
done

setnextjob $(($job+1))
